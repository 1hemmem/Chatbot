services:
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  database:
    build: ./services/db
    container_name: database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "10000:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    container_name: orchastrator
    build: ./services/orchastrator
    ports:
      - "9000:8000"
    env_file:
      - .env
    depends_on:
      - redis
      - ai
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  ai:
    container_name: ai
    build: ./services/ai
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      retrival:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  retrival:
    container_name: retrival
    build: ./services/retrival
    ports:
      - "7000:8000"
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  ui:
    container_name: ui
    build: ./services/ui
    ports:
      - "6000:8501"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8501 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on:
      app:
        condition: service_healthy
    links:
      - "app"

  llm:
    build: ./services/llm
    container_name: llm
    ports:
      - "5000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      - ollama:/data

volumes:
  redis_data:
  ollama:
